CREATE KEYSPACE IF NOT EXISTS ybtest;

DROP TABLE IF EXISTS ybtest.warehouse;
CREATE TABLE IF NOT EXISTS ybtest.warehouse (
W_ID INT,
W_NAME VARCHAR,
W_STREET_1 VARCHAR,
W_STREET_2 VARCHAR,
W_CITY VARCHAR,
W_STATE VARCHAR,
W_ZIP VARCHAR,
W_TAX INT,
W_YTD BIGINT,
PRIMARY KEY (W_ID)
);

DROP TABLE IF EXISTS ybtest.district;
CREATE TABLE IF NOT EXISTS ybtest.district (
D_W_ID INT,
D_ID INT,
D_NAME VARCHAR,
D_STREET_1 VARCHAR,
D_STREET_2 VARCHAR,
D_CITY VARCHAR,
D_STATE VARCHAR,
D_ZIP VARCHAR,
D_TAX INT,
D_YTD BIGINT,
D_NEXT_O_ID INT,
PRIMARY KEY (D_W_ID,D_ID)
);

DROP TABLE IF EXISTS ybtest.customer;
CREATE TABLE IF NOT EXISTS ybtest.customer (
C_W_ID INT,
C_D_ID INT,
C_ID INT,
C_FIRST VARCHAR,
C_MIDDLE VARCHAR,
C_LAST VARCHAR,
C_STREET_1 VARCHAR,
C_STREET_2 VARCHAR,
C_CITY VARCHAR,
C_STATE VARCHAR,
C_ZIP VARCHAR,
C_PHONE VARCHAR,
C_SINCE TIMESTAMP,
C_CREDIT VARCHAR,
C_CREDIT_LIM BIGINT,
C_DISCOUNT BIGINT,
C_BALANCE BIGINT,
C_YTD_PAYMENT BIGINT,
C_PAYMENT_CNT INT,
C_DELIVERY_CNT INT,
C_DATA VARCHAR,
PRIMARY KEY (C_D_ID, C_W_ID, C_ID)
) WITH CLUSTERING ORDER BY (C_W_ID ASC, C_ID ASC);

DROP TABLE IF EXISTS ybtest.orders;
CREATE TABLE IF NOT EXISTS ybtest.orders (
O_W_ID INT,
O_D_ID INT,
O_ID INT,
O_C_ID INT,
O_CARRIER_ID INT,
O_OL_CNT INT,
O_ALL_LOCAL INT,
O_ENTRY_D TIMESTAMP,
PRIMARY KEY (O_W_ID, O_D_ID, O_ID)
);

DROP TABLE IF EXISTS ybtest.item;
CREATE TABLE IF NOT EXISTS ybtest.item (
I_ID INT,
I_NAME VARCHAR,
I_PRICE INT,
I_IM_ID INT,
I_DATA VARCHAR,
PRIMARY KEY (I_ID)
);

DROP TABLE IF EXISTS ybtest.orderline;
CREATE TABLE IF NOT EXISTS ybtest.orderline (
OL_W_ID INT,
OL_D_ID INT,
OL_O_ID INT,
OL_NUMBER INT,
OL_I_ID INT,
OL_DELIVERY_D TIMESTAMP,
OL_AMOUNT BIGINT,
OL_SUPPLY_W_ID INT,
OL_QUANTITY INT,
OL_DIST_INFO VARCHAR,
PRIMARY KEY (OL_W_ID,OL_I_ID,OL_D_ID,OL_O_ID,OL_NUMBER)
) WITH transactions = { 'enabled' : true };

DROP TABLE IF EXISTS ybtest.stock;
CREATE TABLE IF NOT EXISTS ybtest.stock (
S_W_ID INT,
S_I_ID INT,
S_QUANTITY INT,
S_YTD BIGINT,
S_ORDER_CNT INT,
S_REMOTE_CNT INT,
S_DIST_01 VARCHAR,
S_DIST_02 VARCHAR,
S_DIST_03 VARCHAR,
S_DIST_04 VARCHAR,
S_DIST_05 VARCHAR,
S_DIST_06 VARCHAR,
S_DIST_07 VARCHAR,
S_DIST_08 VARCHAR,
S_DIST_09 VARCHAR,
S_DIST_10 VARCHAR,
S_DATA VARCHAR,
PRIMARY KEY (S_W_ID,S_I_ID)
);

DROP TABLE IF EXISTS ybtest.order_max_quantity;
CREATE TABLE IF NOT EXISTS ybtest.order_max_quantity (
  O_W_ID INT,
  O_D_ID INT,
  O_ID INT,
  MAX_QUANTITY INT,
  ITEM_IDS LIST<INT>,
  PRIMARY KEY (O_W_ID, O_D_ID, O_ID)
);

DROP TABLE IF EXISTS ybtest.order_non_delivery;
CREATE TABLE IF NOT EXISTS ybtest.order_non_delivery (
  O_W_ID INT,
  O_D_ID INT,
  O_ID INT,
  O_C_ID INT
  PRIMARY KEY (O_W_ID, O_D_ID, O_ID)
) WITH CLUSTERING ORDER BY (O_D_ID ASC, O_ID ASC);

COPY ybtest.warehouse (W_ID, W_NAME, W_STREET_1, W_STREET_2, W_CITY, W_STATE, W_ZIP, W_TAX, W_YTD)
FROM 'data/test_files/warehouse_cql.csv'
WITH DELIMITER=',' AND NULL='null';

COPY ybtest.district (D_W_ID, D_ID, D_NAME, D_STREET_1, D_STREET_2, D_CITY, D_STATE, D_ZIP, D_TAX, D_YTD, D_NEXT_O_ID)
FROM 'data/test_files/district_cql.csv'
WITH DELIMITER=',' AND NULL='null';

COPY ybtest.customer (C_W_ID, C_D_ID, C_ID, C_FIRST, C_MIDDLE, C_LAST, C_STREET_1, C_STREET_2, C_CITY, C_STATE, C_ZIP, C_PHONE, C_SINCE, C_CREDIT, C_CREDIT_LIM, C_DISCOUNT, C_BALANCE, C_YTD_PAYMENT, C_PAYMENT_CNT, C_DELIVERY_CNT, C_DATA)
FROM 'data/test_files/customer_cql.csv'
WITH DELIMITER=',' AND NULL='null' AND INGESTRATE=50000;

COPY ybtest.orders (O_W_ID, O_D_ID, O_ID, O_C_ID, O_CARRIER_ID, O_OL_CNT, O_ALL_LOCAL, O_ENTRY_D)
FROM 'data/test_files/order.csv'
WITH DELIMITER=',' AND NULL='null' AND INGESTRATE=50000;

COPY ybtest.item (I_ID, I_NAME, I_PRICE, I_IM_ID, I_DATA)
FROM 'data/test_files/item_cql.csv'
WITH DELIMITER=',' AND NULL='null' AND INGESTRATE=50000;

COPY ybtest.orderline (OL_W_ID, OL_D_ID, OL_O_ID, OL_NUMBER, OL_I_ID, OL_DELIVERY_D, OL_AMOUNT, OL_SUPPLY_W_ID, OL_QUANTITY, OL_DIST_INFO)
FROM 'data/test_files/order-line_cql.csv'
WITH DELIMITER=',' AND NULL='null' AND INGESTRATE=100000;

COPY ybtest.stock (S_W_ID, S_I_ID, S_QUANTITY, S_YTD, S_ORDER_CNT, S_REMOTE_CNT, S_DIST_01, S_DIST_02, S_DIST_03, S_DIST_04, S_DIST_05, S_DIST_06, S_DIST_07, S_DIST_08, S_DIST_09, S_DIST_10, S_DATA)
FROM 'data/test_files/stock_cql.csv'
WITH DELIMITER=',' AND NULL='null' AND INGESTRATE=50000;

COPY ybtest.order_max_quantity (O_W_ID, O_D_ID, O_ID, MAX_QUANTITY, ITEM_IDS)
FROM 'data/test_files/order_max_quantity_cql.csv'
WITH DELIMITER=',' AND NULL='null' AND INGESTRATE=50000;

COPY ybtest.order_non_delivery (O_W_ID, O_D_ID, O_ID, O_C_ID)
FROM 'data/test_files/order_non_delivery_cql.csv'
WITH DELIMITER=',' AND NULL='null' AND INGESTRATE=50000;

CREATE INDEX ON ybtest.orderline (OL_D_ID, OL_O_ID);